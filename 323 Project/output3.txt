          Token         Lexeme

Keyword             function
        <Opt Function Definitions> ::= <Function Definitions>
        <Function Definitions>  ::= <Function> | <Function> <Function Definitions>
        <Function> ::= function  <Identifier>  [ <Opt Parameter List> ]  <Opt Declaration List>  <Body>

Identifier          add

Separator           [
        <Opt Parameter List> ::=  <Parameter List>
        <Parameter List> ::= <Parameter> | <Parameter> , <Parameter List>
        <Parameter> ::= <IDs> : <Qualifier>

Identifier          first
        <IDs> ::=     <Identifier>    | <Identifier>, <IDs>

Separator           :

Keyword             real
        <Qualifier> ::= int | boolean | real

Separator           ,
        <Parameter> ::= <IDs> : <Qualifier>

Identifier          second
        <IDs> ::=     <Identifier>    | <Identifier>, <IDs>

Separator           :

Keyword             real
        <Qualifier> ::= int | boolean | real

Separator           ]

Separator           {
        <Body>  ::=  {  <Statement List>  }
        <Statement List> ::=   <Statement>   | <Statement> <Statement List>
        <Statement> :: = <Compound> | <Assign> | <If> | <Return> | <Print> | <Scan> | <While>

Keyword             return
        <Return> ::=  return ; |  return <Expression> ;

Identifier          first
        <Return> ::=  return <Expression> ;

Identifier          first
        <Expression> ::= <Expression> + <Term> | <Expression> - <Term> | <Term>

Operator            +

Identifier          second

Separator           ;

Separator           ;

Separator           }

Keyword             function
        <Function Definitions>  ::= <Function> | <Function> <Function Definitions>
        <Function> ::= function  <Identifier>  [ <Opt Parameter List> ]  <Opt Declaration List>  <Body>

Identifier          subtract

Separator           [
        <Opt Parameter List> ::=  <Parameter List>
        <Parameter List> ::= <Parameter> | <Parameter> , <Parameter List>
        <Parameter> ::= <IDs> : <Qualifier>

Identifier          first
        <IDs> ::=     <Identifier>    | <Identifier>, <IDs>

Separator           :

Keyword             real
        <Qualifier> ::= int | boolean | real

Separator           ,
        <Parameter> ::= <IDs> : <Qualifier>

Identifier          second
        <IDs> ::=     <Identifier>    | <Identifier>, <IDs>

Separator           :

Keyword             real
        <Qualifier> ::= int | boolean | real

Separator           ]

Separator           {
        <Body>  ::=  {  <Statement List>  }
        <Statement List> ::=   <Statement>   | <Statement> <Statement List>
        <Statement> :: = <Compound> | <Assign> | <If> | <Return> | <Print> | <Scan> | <While>

Keyword             return
        <Return> ::=  return ; |  return <Expression> ;

Identifier          first
        <Return> ::=  return <Expression> ;

Identifier          first
        <Expression> ::= <Expression> + <Term> | <Expression> - <Term> | <Term>

Operator            -

Identifier          second

Separator           ;

Separator           ;

Separator           }

Separator           %%
        <Rat18S>  ::=   <Opt Function Definitions>   %%  <Opt Declaration List>  <Statement List>
        <Opt Declaration List> ::= <Declaration List> | <Empty>
        <Declaration List>  : = <Declaration>; | <Declaration>; <Declaration List>

Keyword             real
        <Declaration> ::=   <Qualifier > <IDs>
        <Qualifier> ::= int | boolean | real

Identifier          total
        <IDs> ::=     <Identifier>    | <Identifier>, <IDs>

Separator           ;

Keyword             real
        <Declaration> ::=   <Qualifier > <IDs>
        <Qualifier> ::= int | boolean | real

Identifier          first
        <IDs> ::=     <Identifier>    | <Identifier>, <IDs>

Separator           ,

Identifier          second

Separator           ;
        <Statement List> ::=   <Statement>   | <Statement> <Statement List>
        <Statement> :: = <Compound> | <Assign> | <If> | <Return> | <Print> | <Scan> | <While>

Keyword             get
        <Scan> ::=    get ( <IDs> );
Separator           (

Identifier          first

Separator           ,
        <IDs> ::=     <Identifier>    | <Identifier>, <IDs>

Identifier          second

Separator           )

Separator           ;

Identifier          add

Separator           (

Identifier          first

Separator           ,
        <IDs> ::=     <Identifier>    | <Identifier>, <IDs>

Identifier          second

Separator           )

Separator           ;

Identifier          subtract

Separator           (

Identifier          first

Separator           ,
        <IDs> ::=     <Identifier>    | <Identifier>, <IDs>

Identifier          second

Separator           )

Separator           ;
EOF